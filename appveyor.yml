version: pychrono-dev.{build}

image: Visual Studio 2017

configuration: Release

init:
   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

environment:
  appveyor_rdp_password:
    secure: E77enAeQDg4eux1MAQKfpQ==

  binstar_token:
    # below the secure to upload to anaconda cloud
    # take the travis-ci token generated from the command line
    # anaconda auth -n the_token_name --max-age 22896000 -c --scopes api
    # and copy paste to
    # https://ci.appveyor.com/tools/encrypt
    # then copy/paste the result below
    secure: 9exa44h7MMyer4KBloBUkO0I8d3M+iFvQlgneEAuL6uA/z/dnQe91upfINxrrLXE
  
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\contrib\\packaging-python\\appveyor\\obvci_appveyor_python_build_env.cmd"
  
    # Workaround for https://github.com/conda/conda-build/issues/636
    PYTHONIOENCODING: "UTF-8"

  matrix:
    - PYTHON: "C:\\Python35_64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      CONDA_PY: "35"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda35-x64"
      CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      CONFIGURATION: Release
    - PYTHON: "C:\\Python36_64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "36"
      CONDA_NPY: "18"
      CONDA_INSTALL_LOCN: "C:\\Miniconda36-x64"
      CMAKE_GENERATOR: Visual Studio 15 2017 Win64
      CONFIGURATION: Release


    
# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64

install:
    - ps: Start-FileDownload 'http://downloads.sourceforge.net/irrlicht/irrlicht-1.8.2.zip'
    - ps: 7z x irrlicht-1.8.2.zip -oC:\ -y
    # fetch git submodules, to update the demos/ folder
    - cmd: git submodule update --init --remote --recursive
    # Set the CONDA_NPY, although it has no impact on the actual build. We need this because of a test within conda-build.
    - cmd: set CONDA_NPY=19
    # Remove cygwin (and therefore the git that comes with it).
    - cmd: rmdir C:\cygwin /s /q
    # Use the pre-installed Miniconda for the desired arch
    #
    # However, it is really old. So, we need to update some
    # things before we proceed. That seems to require it being
    # on the path. So, we temporarily put conda on the path
    # so that we can update it. Then we remove it so that
    # we can do a proper activation.
    #- cmd: set "OLDPATH=%PATH%"
    #- cmd: set "PATH=%CONDA_INSTALL_LOCN%\\Scripts;%CONDA_INSTALL_LOCN%\\Library\\bin;%PATH%"
    #- cmd: conda config --set always_yes yes --set changeps1 no
    #- cmd: conda update conda
    #- cmd: set "PATH=%OLDPATH%"
    - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
    - cmd: conda config --set show_channel_urls true
    - cmd: conda update conda --yes
    - cmd: conda install conda-build anaconda-client --yes
    - cmd: conda config --add channels https://conda.anaconda.org/conda-forge
    - cmd: conda config --add channels https://conda.anaconda.org/intel

build: off

test_script:
  # Build and test the package. This appears(?) to sporadically fail due to a 
  # bug in conda-build on 32 bit python.
  # https://github.com/conda/conda-build/issues/152
  #
  # Note also that our setup.py script, which is called by conda-build, writes
  # a __conda_version__.txt file, so the version number on the binary package
  # is set dynamically. This unfortunately mean that conda build --output
  # doesn't really work.
  #
  - "%CMD_IN_ENV% conda build .\\contrib\\packaging-python\\conda --no-remove-work-dir --dirty"
  # move conda package to /dist
  - cmd: 'mkdir dist'
  - cmd: 'copy /Y %CONDA_INSTALL_LOCN%\conda-bld\win-%PYTHON_ARCH%\pychrono*.bz2 dist || cmd /c "exit /b 0"'
  # upload package to anaconda$
  - ps: cmd /C anaconda --token $env:BINSTAR_TOKEN upload  dist\*.bz2 -l $env:APPVEYOR_REPO_BRANCH --force "2>&1"

artifacts:
  - path: dist\*
    name: packages